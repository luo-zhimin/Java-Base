package com.java.base.day.binaryAndOperator;

public class BinaryDetail {
    public static void main(String[] args) {
        /*
         * 进制
         * 对于整数，有四种表示方式：
         * 二进制：0,1 ，满 2 进 1.以 0b 或 0B 开头。
         * 十进制：0-9 ，满 10 进 1。
         * 八进制：0-7 ，满 8 进 1. 以数字 0 开头表示。
         * 十六进制：0-9 及 A(10)-F(15)，满 16 进 1. 以 0x 或 0X 开头表示。此处的 A-F 不区分大小写。
         *
         * 转换
         *  Math.pow(16,3) 相等于数学的幂等函数 (进制=>十进制)
         *  1.进制=>十进制 规则：从最低位(右边)开始，将每个位上的数提取出来，乘以 进制 的(位数-1)次方，然后求和
         *  2.十进制=>其他进制  将10进制的该数不断除以 进制，直到商为 0 为止，然后将每步得到的余数倒过来，就是对应的进制进制。
         *  3.二进制转换八进制(三个一组，可以二转10计算) 十六进制(四个一组 二转十计算)
         *  4.八进制转换成二进制  规则：将八进制数每 1 位，转成对应的一个 3 位的二进制数即可
         *      十六进制转换成二进制 将十六进制数每 1 位，转成对应的 4 位的一个二进制数即可。(2进制转10进制倒退)
         */

        //二进制
        int n1 = 0b1010;//0B 0b开头
        //十进制
        int n2 = 1010;
        //八进制
        int n3 = 01010;//数字0开头
        //十六进制
        int n4 = 0x10101;//0x 0X 开头
        System.out.println(n1 + "/" + n2 + "/" + n3 + "/" + n4);

        // 转换 进制十进制
        // 1)二进制转十进制
        // 规则：从最低位(右边)开始，将每个位上的数提取出来，乘以 2 的(位数-1)次方，然后求和
        int a2 = 0b1011;//2进制
        int a10 = 1 + 1 * 2 + 1 * 2 * 2 * 2;
        System.out.println(a2 + "---" + a10);
        // 2) 八进制转十进制
        // 规则：从最低位(右边)开始，将每个位上的数提取出来，乘以 8 的(位数-1)次方，然后求和
        int b8 = 01010;
        int b10 = 1 * 8 * 1 + 8 * 8 * 8;
        System.out.println(b8 + "----" + b10);
        // 3) 十六进制转十进制
        // 规则：从最低位(右边)开始，将每个位上的数提取出来，乘以 16 的(位数-1)次方，然后求和
        int c16 = 0x23Af;
        int c11 = (int) (15 + 10 * 16 + 3 * Math.pow(16, 2) + 2 * Math.pow(16, 3));
        System.out.println(c16 + "----" + c11);
        //0b110001100 转成 十进制 02456 转成十进制 0xA45 转成十进制
        int t1 = 0b110001100;//396 ==> 2
        int s1 = (int) (Math.pow(2, 2) + Math.pow(2, 3) + Math.pow(2, 7) + Math.pow(2, 8));
        System.out.println(t1 + "--" + s1);
        int t2 = 02456;// ==>8
        int s2 = (int) (6 + 5 * 8 + 4 * Math.pow(8, 2) + 2 * Math.pow(8, 3));
        System.out.println(t2 + "--" + s2);
        int t3 = 0xA45;// ==>16
        int s3 = (int) (5 + 4 * 16 + 10 * Math.pow(16, 2));
        System.out.println(t3 + "--" + s3);

        //十进制转换其他进制
        //将10进制的该数不断除以 进制，直到商为 0 为止，然后将每步得到的余数倒过来，就是对应的进制进制。

        /*
         *   二进制转换八进制 十六进制
         * 二进制转换八进制
         * 规则：从低位开始,将二进制数每三位一组，转成对应的八进制数即可。其实可以用十进制转换
         * 0b101011 = > 011|3 + 101| 5 ==>035
         * 二进制转换十六进制
         * 从低位开始，将二进制数每四位一组，转成对应的十六进制数即可。
         */

        /*
        * 八进制转换成二进制  规则：将八进制数每 1 位，转成对应的一个 3 位的二进制数即可。
        * 十六进制转换成二进制 将十六进制数每 1 位，转成对应的 4 位的一个二进制数即可。
        * 01(001)2(010)3(011)0 转成 二进制 =>0010100110
        * 0xA(1010)B(1011)2(0010)9(1001) 转成二进制 1010101100101001
        */
    }
}
